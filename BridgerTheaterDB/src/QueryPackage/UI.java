/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QueryPackage;


import java.sql.*;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
/**
 *
 * @author Justin
 */
public class UI extends javax.swing.JFrame {
    //Queries will always point to the most current use of "QueryAccess.getQuery()" and point to the display list
    ArrayList<String> queries = new ArrayList();
    //Will point to the selection list
    ArrayList<String> selection;
    SQLData SP = new SQLData();

    
    QueryAccess QA = new QueryAccess("net.ucanaccess.jdbc.UcanaccessDriver", "jdbc:ucanaccess://D:/CodeLibraries/MovieDB.accdb");
    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
//        try{
//            StartList();
//        }
//        catch(ClassNotFoundException ex){System.out.println("ClassNotFound Exception");}
//        catch (SQLException e){
//            System.out.println("SQL Exception (the bad one I think)");
//            printSQLException(e);
//        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selDialog = new javax.swing.JDialog();
        selLabel = new javax.swing.JLabel();
        userInput = new javax.swing.JTextField();
        serachUserQButton = new javax.swing.JButton();
        jFrame1 = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        selList = new javax.swing.JList();
        SearchQButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DBList = new javax.swing.JList();
        SearchMovies = new javax.swing.JButton();
        SearchPeople = new javax.swing.JButton();
        SearchTheaters = new javax.swing.JButton();
        AddNew = new javax.swing.JButton();
        descLabel = new javax.swing.JLabel();
        resultCountLabel = new javax.swing.JLabel();

        selDialog.setBounds(new java.awt.Rectangle(400, 300, 400, 250));

        serachUserQButton.setText("Search");
        serachUserQButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serachUserQButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selDialogLayout = new javax.swing.GroupLayout(selDialog.getContentPane());
        selDialog.getContentPane().setLayout(selDialogLayout);
        selDialogLayout.setHorizontalGroup(
            selDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(selDialogLayout.createSequentialGroup()
                        .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(serachUserQButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        selDialogLayout.setVerticalGroup(
            selDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selDialogLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(selLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(selDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serachUserQButton))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jFrame1.setBounds(new java.awt.Rectangle(400, 300, 400, 300));

        selList.setModel(new DefaultListModel<String>() {

            public int getSize() { return selection.size(); }

            public String getElementAt(int i) { return selection.get(i); }

            public void addElement(String f) { super.addElement(f); 
                //queries.add(f); 
            }

            public void add(int i, String f) { super.add(i, f); selection.add(i, f); }

        });
        jScrollPane2.setViewportView(selList);

        SearchQButton.setText("Search");
        SearchQButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchQButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(SearchQButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                .addContainerGap())
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(SearchQButton)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DBList.setModel(new DefaultListModel<String>() {

            public int getSize() { return queries.size(); }

            public String getElementAt(int i) { return queries.get(i); }

            public void addElement(String f) { super.addElement(f); 
                //queries.add(f); 
            }

            public void add(int i, String f) { super.add(i, f); queries.add(i, f); }

        });
        jScrollPane1.setViewportView(DBList);

        SearchMovies.setText("Search Movies...");
        SearchMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchMoviesActionPerformed(evt);
            }
        });

        SearchPeople.setText("Search People...");
        SearchPeople.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPeopleActionPerformed(evt);
            }
        });

        SearchTheaters.setText("Search Theaters...");
        SearchTheaters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTheatersActionPerformed(evt);
            }
        });

        AddNew.setText("Add New Entry...");
        AddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchTheaters, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resultCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(descLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(descLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SearchMovies, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchPeople, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resultCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchTheaters, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMoviesActionPerformed
        try{
            populateSelectionList(SP.getSelectionStatement(1));
        }catch (Exception e){}
        jFrame1.setVisible(true);
        
    }//GEN-LAST:event_SearchMoviesActionPerformed

    private void SearchPeopleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPeopleActionPerformed
        try{
            populateSelectionList(SP.getSelectionStatement(2));
        }catch (Exception e){}
        jFrame1.setVisible(true);
        
    }//GEN-LAST:event_SearchPeopleActionPerformed

    private void SearchTheatersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTheatersActionPerformed
         try{
            populateSelectionList(SP.getSelectionStatement(3));
        }catch (Exception e){}
        jFrame1.setVisible(true);
        
    }//GEN-LAST:event_SearchTheatersActionPerformed

    private void AddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddNewActionPerformed

    private void SearchQButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchQButtonActionPerformed
        String sql;
        int c = selList.getSelectedIndex();
        try{
        //In the case that the user is searching through movies
        if (selection.equals(SP.getSelectionStatement(1))){
            //program needs to know if the query will require a parameter
            if(selList.getSelectedIndex() == 1){
                setUserDialog();
            }
            else{
                sql = SP.getQuery1_2();
                jFrame1.setVisible(false);
                showList(sql);
                printDescLabels();
            }
        }
        
        //In the case that the user is searching through people
        else if (selection.equals(SP.getSelectionStatement(2))){
            if(selList.getSelectedIndex() == 1){
                setUserDialog();
            }
            else{
                sql = SP.getQuery1_1();
                jFrame1.setVisible(false);
                showList(sql);
                printDescLabels();
            }
        }
        
        //In the case that the user is searching through theaters
        else{
            if(selList.getSelectedIndex() == 1){
                setUserDialog();
            }
            else{
                sql = SP.getQuery5_2();
                jFrame1.setVisible(false);
                showList(sql);
                printDescLabels();
            }
            }
        }
        catch(ClassNotFoundException ex){System.out.println("ClassNotFound Exception");}
        catch (SQLException e){
            System.out.println("SQL Exception (the bad one I think)");
            printSQLException(e);
        }catch(Exception e){};
        
        
        
    }//GEN-LAST:event_SearchQButtonActionPerformed

    private void serachUserQButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serachUserQButtonActionPerformed
        //all the queries that require user input
        try{
            if(selection.equals(SP.getSelectionStatement(1))){
                showList(SP.getQuery3(userInput.getText()));
            }
            else if(selection.equals(SP.getSelectionStatement(2))){
                showList(SP.getQuery2_1(userInput.getText()));
            }
            else{
                showList(SP.getQuery9_6(userInput.getText()));
            }
        }catch(SQLException e){printSQLException(e);}
        catch(Exception e){}
        
        printDescLabels();
        
        clearUserDialog();
    }//GEN-LAST:event_serachUserQButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }
//    public void StartList() throws ClassNotFoundException, SQLException{
//        queries = QA.getQuery("SELECT V.MovieTitle AS Movie, V.Showtimes, MV.TheaterName " +
//                              "FROM Movie AS M, MovieViewing AS MV, Viewer AS V, People AS P " +
//                              "WHERE V.Showtimes = MV.Showtimes AND V.MovieTitle = MV.MovieTitle AND MV.MovieTitle = M.MovieTitle AND P.FullName = V.FullName " +
//                              "AND P.FullName = \"Bridger Deschamps\" " +
//                              "ORDER BY V.Showtimes");
////        queries = QA.getQuery("SELECT Distinct MovieTitle FROM MovieViewing");
////        queries = QA.getQuery("SELECT Showtimes, TheaterName, MovieTitle FROM Ticket");
//        int q = queries.size();
//        for (int i = 0; i < q; i++){
//            ((DefaultListModel)DBList.getModel()).addElement(queries.get(i));
//            //System.out.printf("%s" + "\n", queries.get(i));
//        }
//    }
    
    public void setUserDialog(){
        selLabel.setText(selection.get(1));
        selDialog.setVisible(true);
    }
    public void clearUserDialog(){
        userInput.setText(null);
        selLabel.setText(null);
        selDialog.setVisible(false);
        jFrame1.setVisible(false);
        
    }
    
    //I hate this.
    //This is supposed to work.
    //And it doesn't and I'm cranky.
    //In theory, it's supposed to show what the columns are named for each query and how many results there are
    //It's so stupid
    public void printDescLabels(){
        int dCount = queries.size();
//        String addDesc = "Showing: ";
//        for (int i = 1; i <= colCount; i++){
//            addDesc += QA.resultColNames.get(i);
//            if (i != colCount - 1)
//                addDesc += " , ";
//        }
//        descLabel.setText(addDesc);
        String rCount = "There are " + dCount + " results";
        resultCountLabel.setText(rCount);
    }
    //Tells the QueryAccess class to grab the data from the DB with the particular sql
    //and then shows the data through a list
    //the bread and butter of what's going on in this whole project
    public void showList(String sql)throws ClassNotFoundException, SQLException{
        queries = QA.getQuery(sql);
        int q = queries.size();
        for (int i = 0; i < q; i++){
            ((DefaultListModel)DBList.getModel()).addElement(queries.get(i));
        }
    }
    //populates the query selection list with the current selection
    public void populateSelectionList(ArrayList<String> s){
        selection = s;
        for (int i = 0; i < s.size(); i++){
            ((DefaultListModel)selList.getModel()).addElement(selection.get(i));
        }
    }
    //these are functions I found online to help troubleshoot. 
    public static void printSQLException(SQLException ex) {

    for (Throwable e : ex) {
        if (e instanceof SQLException) {
            if (ignoreSQLException(
                ((SQLException)e).
                getSQLState()) == false) {

                e.printStackTrace(System.err);
                System.err.println("SQLState: " +
                    ((SQLException)e).getSQLState());

                System.err.println("Error Code: " +
                    ((SQLException)e).getErrorCode());

                System.err.println("Message: " + e.getMessage());

                Throwable t = ex.getCause();
                while(t != null) {
                    System.out.println("Cause: " + t);
                    t = t.getCause();
                }
            }
        }
    }
}
    public static boolean ignoreSQLException(String sqlState) {

    if (sqlState == null) {
        System.out.println("The SQL state is not defined!");
        return false;
    }

    // X0Y32: Jar file already exists in schema
    if (sqlState.equalsIgnoreCase("X0Y32"))
        return true;

    // 42Y55: Table already exists in schema
    if (sqlState.equalsIgnoreCase("42Y55"))
        return true;

    return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNew;
    private javax.swing.JList DBList;
    private javax.swing.JButton SearchMovies;
    private javax.swing.JButton SearchPeople;
    private javax.swing.JButton SearchQButton;
    private javax.swing.JButton SearchTheaters;
    private javax.swing.JLabel descLabel;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel resultCountLabel;
    private javax.swing.JDialog selDialog;
    private javax.swing.JLabel selLabel;
    private javax.swing.JList selList;
    private javax.swing.JButton serachUserQButton;
    private javax.swing.JTextField userInput;
    // End of variables declaration//GEN-END:variables
}
